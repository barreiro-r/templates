
Create a Python following these instrunctions:

# Script Name
[<<- SCRIPT NAME ->>]

# Main Goal
[<<- DESCRIBE SCRIPT'S GOAL HERE ->>]

# Core Requirements
- CLI: Use click with options only (no arguments).
- Output: Use rich for all console output (header, footer, logs).
- Implement print_header() and print_footer() functions.
- Create a log_debug(message, data) function that is only active when --debug is used.
- Use distinct colors for INFO, WARN, and ERROR messages.
- Use progress bars when its useful.

- Use this as reader:
```
def print_header():
    """Prints a styled header to the console."""
    header_text = Text([<<- SCRIPT NAME ->>], style="bold blue", justify="center")
    console.print(Panel(header_text, border_style="blue", expand=False))
    console.print()
```

- Use this for the footer:
```
def print_panel_end_message(success: bool , duration: float):
    """Prints a summary of execution details inside a Panel."""
    
    completion_timestamp = datetime.now().strftime("%Y-%m-%d %H:%M:%S")

    if success:
        status_message = "[green]Script Finished Successfully[/green]"
    else:
        status_message = "[red]Script Failed[/red]"

    summary_message = (
        f"[bold]{status_message}[/bold]\n"
        f"Completion Time : {completion_timestamp}\n"
        f"Total Duration  : [cyan]{duration:.2f} seconds[/cyan]"
    )

    console.print(
        Panel.fit(
            summary_message,
            title="[blue]Execution Summary[/blue]",
            border_style="blue",
            padding=(1, 2)
        )
    )
```

- Print time when start and when it end

# Structure:
- Organize code into functions with docstrings.
- Use if __name__ == "__main__":

# CLI Options to Implement:
--input-file, -i: (Required) Path to the input file.
--output-path, -o: (Optional) Directory to save results.
--verbose, -v: (Flag) Show verbose debugging output.
[<<- ADD OTHER OPTIONS AS NEEDED ->>]

# Example Usage:
Include a commented-out example of the run command at the end of the script.
Prefer using long name options.

